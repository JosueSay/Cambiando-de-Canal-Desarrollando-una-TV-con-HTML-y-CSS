/* Organización eficiente y modular del código CSS */
body, html {
  height: 100%;
  margin: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(210, 181, 141, 255);
  flex-direction: column;
}

.tv_superior {
  width: 350px;
  height: 302px;
  background-color: rgba(34, 35, 35, 255);
  border-radius: 20px;
  padding: 10px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.tv_inferior {
  width: 310px;
  height: 20px;
  background-color: rgba(34, 35, 35, 255);
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
  display: flex;
  align-items: center;
  padding-left: 20px;
  padding-bottom: 5px;
  border-top: 5px solid rgba(16, 17, 16, 255);
}


.pantalla {
  overflow: hidden;
  width: 320px;
  height: 240px;
  background-color: rgba(16, 16, 16, 255);
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
}

/* Uso de pseudo-elementos */
.pantalla::before,
.pantalla::after {
  content: '';
  position: absolute;  /* aca es necesario :c*/
  width: 100%;
  height: 5px;
  background-color: black;
}

.pantalla::before {
  top: 0;
  left: 0;
}

.pantalla::after {
  bottom: 0;
  left: 0;
  background-color: rgba(69, 68, 69, 1)
}

.cuadro_logo {
  opacity: 0.9;
  width: 55px;
  height: 60px;
  background-color: white;
  display: flex;
  justify-content: center;
  align-items: center;
  animation: moveLogo 10s infinite alternate, changeColor 10s infinite alternate;
}

.logo_tv {
  width: 50px;
}

/* Animaciones y transiciones */
@keyframes moveLogo {
  0% {
    transform: translate(-133px, -90px);
  }
  25% {
    transform: translate(133px, 0px);
  }
  50% {
    transform: translate(0px, 90px);
  }
  75% {
    transform: translate(-133px, 0px);
  }
  100% {
    transform: translate(0px, -90px);
  }
}

@keyframes changeColor {
  0%, 100% { background-color: white; }
  25% { background-color: green; }
  50% { background-color: red; }
  75% { background-color: yellow; }
}

@keyframes blink {
  0%, 100% { opacity: 1; }
  50% { opacity: 0; }
}

.boton1, .boton2, .boton3, .punto {
  display: flex;
}

.boton1, .boton2, .boton3 {
  width: 15px;
  height: 5px;
  margin-right: 10px;
  transition: all 0.3s ease;
}

.punto {
  width: 5px;
  height: 5px;
  background-color: #51ff00;
  border-radius: 50%;
  margin-right: 10px;
  animation: none; /* Esto desactiva la animación a menos que se especifique lo contrario */
}

/* Aplica el efecto hover para aumentar el tamaño */
.boton1:hover {
  width: 20px;
  height: 10px;
  cursor: pointer;
}

.boton2:hover, .boton3:hover {
  width: 17px;
  height: 7px;
  cursor: pointer;
}

/*Selector +*/
.boton1 + .boton2 {
  margin-left: 20px; /* Aumenta el margen izquierdo entre botón 1 y botón 2 */
}


/*Selector >*/
.tv_inferior > .boton1, .tv_inferior > .boton2, .tv_inferior > .boton3 {
  border-radius: 2px; /* Aplica un borde redondeado a los botones */
}

.tv_inferior > .boton1:first-child { /* Selecciona el primer botón y cambia su color */
  background-color: #ff0000;
}

.tv_inferior > .boton2:nth-child(2) { /* Selecciona el segundo botón (botón 2) y cambia su color */
  background-color: yellow;
}


/*Selector ~*/
.boton1 ~ .boton2, .boton1 ~ .boton3 {
  background-color:blue;
}
.boton1:hover ~ .punto {
  background-color: #ff0000; /* Cambia el color a rojo APAGAR TV*/
}

.boton2:hover ~ .punto, .boton3:hover ~ .punto { /* Aplica el efecto de parpadeo a .punto cuando se hace hover sobre .boton2 o .boton3 CAMBIO DE CANAL*/
  animation: blink 1s linear infinite;
}